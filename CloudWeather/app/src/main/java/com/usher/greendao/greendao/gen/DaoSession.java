package com.usher.greendao.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.aphrodite.cloudweather.database.entity.DownloadFileInfo;
import com.aphrodite.cloudweather.database.entity.CityEntity;

import com.usher.greendao.greendao.gen.DownloadFileInfoDao;
import com.usher.greendao.greendao.gen.CityEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig downloadFileInfoDaoConfig;
    private final DaoConfig cityEntityDaoConfig;

    private final DownloadFileInfoDao downloadFileInfoDao;
    private final CityEntityDao cityEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        downloadFileInfoDaoConfig = daoConfigMap.get(DownloadFileInfoDao.class).clone();
        downloadFileInfoDaoConfig.initIdentityScope(type);

        cityEntityDaoConfig = daoConfigMap.get(CityEntityDao.class).clone();
        cityEntityDaoConfig.initIdentityScope(type);

        downloadFileInfoDao = new DownloadFileInfoDao(downloadFileInfoDaoConfig, this);
        cityEntityDao = new CityEntityDao(cityEntityDaoConfig, this);

        registerDao(DownloadFileInfo.class, downloadFileInfoDao);
        registerDao(CityEntity.class, cityEntityDao);
    }
    
    public void clear() {
        downloadFileInfoDaoConfig.clearIdentityScope();
        cityEntityDaoConfig.clearIdentityScope();
    }

    public DownloadFileInfoDao getDownloadFileInfoDao() {
        return downloadFileInfoDao;
    }

    public CityEntityDao getCityEntityDao() {
        return cityEntityDao;
    }

}
